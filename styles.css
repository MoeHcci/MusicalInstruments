body {
  background-color: #C7D3D4FF;
}

.title {
  font-size: 5rem;
  text-align: center;
  font-family: 'Open Sans', sans-serif;
}

.title_subsection {
  font-size: 2rem;
  text-align: center;
  font-family: 'Open Sans', sans-serif;
}



.notes {
  text-align: center;
  justify-content: space-evenly;
  margin-top: 10rem;
  margin-bottom: 10rem;



  display: flex;
  /* display flex will allow div to be a parent and
all the element inside it be its childern and the childern will all fit in
a display: block status that can be manipulated  to be spaced evenly  */
  /* If you are confused, change the display to display: block and you will that each item will have ites own block */


  min-height: calc(100vh - 500px);
  /* Use the calc() function to set the height of your wrapper equal to the
  height of the viewport (display), minus a height that will always show the footer. */
  /* Soruce: http://martinpennock.com/blog/force-footer-bottom-page-css/ */
  /* Exa/mple:
  height: 100vh; means the height of this element is equal to 100% of the viewport height.
  example: when the height: 50vh; and If your screen height is 1000px, your element height will be equal to 500px (50% of 1000px). */
}

/* The @media always goes after the class it is targeting (e.g., notes) */
@media (max-width: 1800px) {
  /* CSS that should be displayed if width is equal to or less than 800px goes here */
  .notes {
    text-align: center;
    display: block;
    justify-content: space-evenly;
    margin-top: 10rem;
    margin-bottom: 10rem;
    min-height: calc(100vh - 50px);

    min-height: calc(100vh - 500px);
    /* Use the calc() function to set the height of your wrapper equal to the
    height of the viewport (display), minus a height that will always show the footer. */
    /* http://martinpennock.com/blog/force-footer-bottom-page-css/ */

    /* height: 100vh; means the height of this element is equal to 100% of the viewport height. */
    /* example: height: 50vh;
    If your screen height is 1000px, your element height will be equal to 500px (50% of 1000px). */

  }
}

.notes_set {
  font-family: 'Ubuntu', sans-serif;
  font-size: 5rem;
  border-radius: 20%;
  width: 15.625rem;
  height: 15rem;
  border: 0.375rem solid black;
  color: black;
  background-color: #00239CFF;
  transition-duration: 0.4s;
  cursor: pointer;
}

.notes_set:hover {
  color: red;
  background-color: #C7D3D4FF;
}

.notes_set:active {
  color: red;
  background-color: #C7D3D4FF;
  transform: translateY(0.375rem);
}


/* This class is for "butoon/image" method 1 */

.container {
  position: relative;
    text-align: center;
}

.img {
  width: 14rem;
  height: 14rem;
  border-radius: 30%;
}

/* Issues were experinced while positioning the letters */
.center {
  position: relative;
  bottom: 10.625rem;
}

.description {
  margin-top: 0rem;
  margin-bottom: 0rem;
  font-family: 'Ubuntu', sans-serif;
  font-size: 2rem
}






/* This class is for "butoon/image" method 2 */
/* The issue witht his method, we can not make the image has round corners
because it is added to the div from a css class not added to an image element  */
.W {
  background-image: url('piano.jpg');
  background-position: center;
  background-repeat: no-repeat;
  background-size: 11rem;
}

.w_container {
  position: relative;
  text-align: center;
}










.footer {
  font-family: 'Montserrat', sans-serif;
  font-size: 1rem;
  text-align: center;
  height: 10px;

}
